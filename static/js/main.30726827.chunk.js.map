{"version":3,"sources":["components/socialProfile/Profile.js","components/friendList/friendListItem/FriendListItem.js","components/friendList/FriendList.js","components/statistics/Statistics.js","components/transactionHistory/transactionItem/TransactionItem.js","components/transactionHistory/Transactions.js","components/App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","style","margin","display","width","justifyContent","padding","src","alt","flexDirection","listStyle","followers","views","likes","FriendListItem","friend","isOnline","FriendList","friends","map","id","Statistics","marginLeft","data","alignItems","label","percentage","TransactionItem","transaction","type","amount","currency","Transactions","transactions","class","border","App","user","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30726827.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className=\"profile\" style={{ margin: 20 }}>\r\n      <div className=\"description\" style={{ display: \"flex\", width: 400, justifyContent: \"space-between\", padding: 20 }}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" width=\"150\" />\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <h3 className=\"name\">{name}</h3>\r\n          <p className=\"tag\">{tag}</p>\r\n          <p className=\"location\">{location}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className=\"stats\" style={{ display: \"flex\", width: 400, justifyContent: \"space-between\", listStyle: \"none\" }}>\r\n        <li>\r\n          <span className=\"label\">\r\n            <b>Followers : </b>\r\n          </span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">\r\n            <b>Views : </b>\r\n          </span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">\r\n            <b>Likes : </b>\r\n          </span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","// В зависимости от пропа isOnline, должен меняться цвет фона span.status.\r\n//Это можно сделать через разный CSS - класс или Styled Components.\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendListItem = ({ friend }) => {\r\n  return (\r\n    <li className=\"item\" style={{ listStyle: \"none\", padding: 15 }}>\r\n      <span className=\"status\">{friend.isOnline}</span>\r\n      <img className=\"avatar\" src={friend.avatar} alt={friend.name} width=\"48\" />\r\n      <p className=\"name\">{friend.name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  friend: PropTypes.shape({\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired\r\n  })\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport FriendListItem from \"./friendListItem/FriendListItem\";\r\n// import PropTypes from \"prop-types\";\r\n// import \"./FriendList.css\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className=\"FriendList\" style={{ display: \"flex\" }}>\r\n      {friends.map(friend => (\r\n        <FriendListItem friend={friend} key={friend.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// FriendListItem.propTypes = {\r\n//   friends: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.array.isRequired\r\n//     })\r\n//   )\r\n// };\r\n\r\nexport default FriendList;\r\n","// title - не обязателен, и если он не передан, не должна рендериться разметка заголовка <h2>.\r\n// Цвет фона элемента статистики в оформлении можно пропустить, либо создать функцию для генерации случайного цвета.\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ stats }) => {\r\n  return (\r\n    <section className=\"statistics\">\r\n      <h2 className=\"title\" style={{ marginLeft: 120 }}>\r\n        Upload stats\r\n      </h2>\r\n      <ul className=\"stat-list\" style={{ display: \"flex\", margin: 20, listStyle: \"none\" }}>\r\n        {stats.map(data => (\r\n          <li\r\n            className=\"item\"\r\n            key={data.id}\r\n            style={{ display: \"flex\", flexDirection: \"column\", padding: 10, alignItems: \"center\" }}\r\n          >\r\n            <span className=\"label\">{data.label}</span>\r\n            <span className=\"percentage\">{data.percentage}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  percentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionItem = ({ transaction }) => {\r\n  return (\r\n    <tr>\r\n      <td>{transaction.type}</td>\r\n      <td>{transaction.amount}</td>\r\n      <td>{transaction.currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactionItem.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  currency: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TransactionItem;\r\n","import React from \"react\";\r\nimport TransactionItem from \"./transactionItem/TransactionItem\";\r\n\r\nconst Transactions = ({ transactions }) => {\r\n  return (\r\n    <table class=\"transaction-history\" style={{ border: \"1px solid black\", width: 300, marginLeft: 70 }}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {transactions.map(transaction => (\r\n          <TransactionItem transaction={transaction} key={transaction.id} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","import React from \"react\";\r\nimport user from \"../data/user.json\";\r\nimport friends from \"../data/friends.json\";\r\nimport stats from \"../data/stats.json\";\r\nimport transactions from \"../data/transactions.json\";\r\nimport Profile from \"./socialProfile/Profile\";\r\nimport FriendList from \"./friendList/FriendList\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport Transactions from \"./transactionHistory/Transactions\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile name={user.name} tag={user.tag} location={user.location} avatar={user.avatar} stats={user.stats} />\r\n      <FriendList friends={friends} />\r\n      <Statistics title=\"Upload stats\" stats={stats} />;\r\n      <Transactions transactions={transactions} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}